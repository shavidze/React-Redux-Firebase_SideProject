{"version":3,"sources":["logo.svg","components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignedIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["module","exports","connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","props","console","log","className","to","href","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","notification","key","id","user","content","moment","time","seconds","format","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","ProjectList","projects","index","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","limit","owrnProps","match","params","data","SignedIn","email","password","handleChange","e","setState","target","value","handeleSubmit","preventDefault","signIn","authEror","onSubmit","htmlFor","onChange","authError","creds","credentials","signInWithEmailAndPassword","err","payload","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","message","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","origin","addEventListener","swUrl","fetch","headers","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducer","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","attachAuthIsReady","userProfile","firebaseAuthIsReady","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9157ed0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  console.log(\"signed props\", props);\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a href=\"/\" onClick={props.signOut}>\r\n          Log Out\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDistpatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDistpatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_FAILED\", payload: err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\r\n      })\r\n      .catch(() =>\r\n        dispatch({\r\n          type: \"SIGNOUT_FAILED\",\r\n        })\r\n      );\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n    debugger;\r\n    console.log(newUser);\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((res) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => dispatch({ type: \"SIGNUP_SUCCESS\" }))\r\n      .catch((err) =>\r\n        dispatch({ type: \"SIGNUP_FAILED\", payload: err.message })\r\n      );\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">LogIn</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth,profile } = props;\r\n  console.log(\"auth\", profile);\r\n\r\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Saba Shavidze\r\n        </Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n   console.log(\"state in main page\", state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile:state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nconst Notifications = (props) => {\r\n  const { notifications } = props;\r\n  console.log(\"notifications -\", notifications);\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\"></span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((notification) => {\r\n                console.log(\"note = \", notification);\r\n                return (\r\n                  <li key={notification.id}>\r\n                    <span className=\"pink-text\">{notification.user} - </span>\r\n                    <span>{notification.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(notification.time.seconds).format(\"DD/MM/YYYY\")}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport const ProjectSummary = ({ project }) => {\r\n  console.log(\"proj\", project);\r\n\r\n  return (\r\n    <div className=\"card z-depth0 projectsummary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          Posted By {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.seconds).format(\"DD/MM/YYYY\")}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project, index) => {\r\n          return (\r\n            <Link to={\"/project/\" + project.id}>\r\n              <ProjectSummary key={index} project={project}></ProjectSummary>\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport { ProjectList } from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nexport class Dashboard extends Component {\r\n  render() {\r\n    console.log(\"props -\", this.props);\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) {\r\n    }\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects}></ProjectList>\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"statec  dashboard\", state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    notifications: state.firestore.ordered.notifications,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\" },\r\n    { collection: \"notifications\", limit: 3 },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (project) {\r\n    console.log(\"project\",project);\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <div className=\"card-action great lighten-4 grey-text\">\r\n              <div>\r\n                Posted by {project.authorFirstName} {project.authorLastName}\r\n              </div>\r\n              <div className=\"\">{}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, owrnProps) => {\r\n  const id = owrnProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignedIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handeleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Ageraa\");\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    const { authEror, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handeleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authEror ? <p>{authEror}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authEror: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handeleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handeleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">firstName</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">lastName</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (newUser) => dispatch(signUp(newUser)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    console.log(\"ee =\", e.target);\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handeleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handeleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create new Project</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","import { firestore } from \"firebase\";\r\n\r\nexport const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firebase\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => dispatch({ type: \"CREATE_PROJECT\", payload: project }))\r\n      .catch((err) => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", payload: err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignedIn from \"./components/auth/SignedIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar></Navbar>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignedIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_FAILED\":\r\n      console.log(\"login failed\");\r\n\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\",\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"sign out successfuly\");\r\n      return state;\r\n    case \"SIGNOUT_FAILED\":\r\n      console.log(\"sign out failed\");\r\n      return { ...state, authError: action.payload };\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return { ...state, authError: null };\r\n    case \"SIGNUP_FAILED\":\r\n      console.log(\"signup failed\");\r\n      return { ...state, authError: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"i can find your peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\r\n  ],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      return {\r\n        ...state,\r\n        projects: [\r\n          ...state.projects,\r\n          {\r\n            id: \"4\",\r\n            title: action.payload.title[0],\r\n            content: action.payload.content[0],\r\n          },\r\n        ],\r\n      };\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(action.payload);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default projectReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAOVwa8RRHd8oXOKxIYFeMtF_UBmnufnZ8\",\r\n  authDomain: \"pmanagement-system.firebaseapp.com\",\r\n  databaseURL: \"https://pmanagement-system.firebaseio.com\",\r\n  projectId: \"pmanagement-system\",\r\n  storageBucket: \"pmanagement-system.appspot.com\",\r\n  messagingSenderId: \"324636520428\",\r\n  appId: \"1:324636520428:web:035046dd2593a186035ac9\",\r\n  measurementId: \"G-V8Y71YJQV8\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.firestore().settings({ timestampsInSnapshots: true });\r\n//firebase.analytics();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./store/reducers/rootReducer\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport firebaseConfig from \"./config/firebaseConfig\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(firebaseConfig),\r\n    reactReduxFirebase(firebaseConfig, { \r\n      useFirestoreForProfile:true,\r\n      attachAuthIsReady: true,\r\n      userProfile:'users' })\r\n  )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n\r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: https://bit.ly/CRA-PWA\r\n  serviceWorker.register();\r\n});\r\n"],"sourceRoot":""}